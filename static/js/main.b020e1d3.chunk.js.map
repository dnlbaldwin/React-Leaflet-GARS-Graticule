{"version":3,"sources":["../../src/utilities.ts","../../src/Graticule.ts","App.tsx","index.tsx"],"names":["this","ctx","Graticule","prototype","garsGraticuleName","App","MapContainer","center","zoom","minZoom","maxZoom","maxBounds","LayersControl","position","BaseLayer","checked","name","TileLayer","url","attribution","Overlay","LayerGroup","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b020e1d3.chunk.js","sourcesContent":["// Alphabet, excluding I and O\r\nvar garsLetters = [\r\n    'A',\r\n    'B',\r\n    'C',\r\n    'D',\r\n    'E',\r\n    'F',\r\n    'G',\r\n    'H',\r\n    'J',\r\n    'K',\r\n    'L',\r\n    'M',\r\n    'N',\r\n    'P',\r\n    'Q',\r\n    'R',\r\n    'S',\r\n    'T',\r\n    'U',\r\n    'V',\r\n    'W',\r\n    'X',\r\n    'Y',\r\n    'Z',\r\n];\r\n/**\r\n * This function returns the GARS latitude string for a given latitude\r\n * @param {number} lat - Latitude\r\n * @returns {string} - GARS Latitude letters\r\n */\r\nfunction getGARSLetters(lat) {\r\n    var difference = lat - -90;\r\n    // Difference in degrees divided by 24 total GARS letters (at 0.5 degrees each)\r\n    var firstChar = garsLetters[Math.floor(difference / 12)];\r\n    // The remainder of the modulus indicates the number of degrees North we must traverse.\r\n    // Dividing by 0.5 degrees indicates the final index in the garsLetters array\r\n    var secondChar = garsLetters[Math.floor((difference % 12) / 0.5)];\r\n    return firstChar + secondChar;\r\n}\r\n/**\r\n * This function returns the GARS longitude string for a given longitude\r\n * @param {number} lng - Longitude\r\n * @returns {string} - A GARS longitude string\r\n */\r\nfunction getGARSNumbers(lng) {\r\n    var count = 1;\r\n    while (lng > -180) {\r\n        lng -= 0.5;\r\n        count++;\r\n    }\r\n    var result = count.toString();\r\n    while (result.length < 3) {\r\n        result = '0' + result;\r\n    }\r\n    return result;\r\n}\r\nexport { getGARSLetters, getGARSNumbers };\r\n//# sourceMappingURL=utilities.js.map","import { useMap } from 'react-leaflet';\r\nimport { getGARSLetters, getGARSNumbers } from './utilities';\r\nvar GarsGraticule = function (props) {\r\n    var map = useMap();\r\n    var g = new Graticule(map, props.name, props.checked);\r\n    return null;\r\n};\r\n/**\r\n * In GARS there are three precision levels, Thirty, fifteen, and five minute intervals\r\n */\r\nvar Interval;\r\n(function (Interval) {\r\n    Interval[Interval[\"Thirty\"] = 0] = \"Thirty\";\r\n    Interval[Interval[\"Fifteen\"] = 1] = \"Fifteen\";\r\n    Interval[Interval[\"Five\"] = 2] = \"Five\";\r\n})(Interval || (Interval = {}));\r\n/**\r\n * This class compartmentalizes the functionality required to draw GARS graticules\r\n */\r\nvar Graticule = /** @class */ (function () {\r\n    function Graticule(map, name, checked) {\r\n        this._HALF_DEGREE = 0.5; // 30 minutes\r\n        this._QUARTER_DEGREE = 0.25; // 15 minutes\r\n        this._ONE_TWELFTH_DEGREE = this._QUARTER_DEGREE / 3; // 5 Minutes\r\n        this.showGrid = true;\r\n        this._THIRTY_MINUTES_MIN_ZOOM = 8;\r\n        this._FIFTEEN_MINUTES_MIN_ZOOM = 11;\r\n        this._FIVE_MINUTES_MIN_ZOOM = 12;\r\n        this._THIRTY_MINUTES_LINE_WIDTH = 3;\r\n        this._FIFTEEN_MINUTES_LINE_WIDTH = 2;\r\n        this._FIVE_MINUTES_LINE_WIDTH = 1;\r\n        this._THIRTY_MINUTES_LINE_COLOR = '#F79800';\r\n        this._FIFTEEN_MINUTES_LINE_COLOR = '#2C6FB6';\r\n        this._FIVE_MINUTES_LINE_COLOR = '#FFF';\r\n        this._FONT = '16px Courier New';\r\n        this._FONT_COLOUR = '#000';\r\n        this.map = map;\r\n        this.canvas = document.createElement('canvas');\r\n        this.canvas.classList.add('leaflet-zoom-animated');\r\n        // Strip any spaces as they can't be used in class names\r\n        this.name = name.replace(/\\s/g, '');\r\n        this.options = {\r\n            showGrid: true,\r\n        };\r\n        if (checked) {\r\n            this.options.showGrid = true;\r\n            this.reset();\r\n        }\r\n        else {\r\n            this.options.showGrid = false;\r\n        }\r\n        // Add the canvas only if it hasn't already been added\r\n        if (!this.map.getPanes().overlayPane.classList.contains(this.name)) {\r\n            this.map.getPanes().overlayPane.appendChild(this.canvas);\r\n        }\r\n        this.map.on('viewreset', this.reset, this);\r\n        this.map.on('move', this.reset, this);\r\n        this.map.on('overlayadd', this.showGraticule, this);\r\n        this.map.on('overlayremove', this.clearRect, this);\r\n    }\r\n    Graticule.prototype.clearRect = function (e) {\r\n        if (e.name === this.name) {\r\n            var ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n                this.showGrid = false;\r\n            }\r\n        }\r\n    };\r\n    Graticule.prototype.showGraticule = function (e) {\r\n        if (e.name === this.name) {\r\n            this.showGrid = true;\r\n            this.reset();\r\n        }\r\n    };\r\n    Graticule.prototype.reset = function () {\r\n        if (this.showGrid) {\r\n            var mapSize = this.map.getSize();\r\n            var mapLeftTop = this.map.containerPointToLayerPoint([0, 0]);\r\n            this.canvas.style['transform'] = \"translate3d(\" + mapLeftTop.x + \"px,\" + mapLeftTop.y + \"px,0)\";\r\n            this.canvas.width = mapSize.x;\r\n            this.canvas.height = mapSize.y;\r\n            var ctx = this.canvas.getContext('2d');\r\n            if (ctx) {\r\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n                this.drawFiveMinuteGraticules(ctx);\r\n                this.drawFifteenMinuteGraticules(ctx);\r\n                this.drawThirtyMinuteGraticules(ctx);\r\n                this.drawLabels(ctx);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This procedure will draw all 30 minute GARS labels on the visible map\r\n     * @param {CanvasRenderingContext2D} ctx - The context of the canvas it is being drawn on\r\n     */\r\n    Graticule.prototype.drawLabels = function (ctx) {\r\n        if (!this.canvas || !this.map) {\r\n            return;\r\n        }\r\n        if (this.map.getZoom() < this._THIRTY_MINUTES_MIN_ZOOM) {\r\n            return;\r\n        }\r\n        ctx.strokeStyle = this._THIRTY_MINUTES_LINE_COLOR;\r\n        ctx.fillStyle = this._THIRTY_MINUTES_LINE_COLOR;\r\n        ctx.font = this._FONT;\r\n        // Get the visible area boundaries\r\n        var leftTopLl = this.map.containerPointToLatLng({\r\n            x: 0,\r\n            y: 0,\r\n        });\r\n        var rightBottomLl = this.map.containerPointToLatLng({\r\n            x: this.canvas.width,\r\n            y: this.canvas.height,\r\n        });\r\n        // Round the boundary LL up/down to make the bounding box larger than the visible area\r\n        var effectiveLeftTopLl = {\r\n            lat: Math.ceil(leftTopLl.lat / this._HALF_DEGREE) * this._HALF_DEGREE,\r\n            lng: Math.floor(leftTopLl.lng / this._HALF_DEGREE) * this._HALF_DEGREE,\r\n        };\r\n        var effectiveRightBottomLl = {\r\n            lat: Math.floor(rightBottomLl.lat / this._HALF_DEGREE) * this._HALF_DEGREE,\r\n            lng: Math.ceil(rightBottomLl.lng / this._HALF_DEGREE) * this._HALF_DEGREE,\r\n        };\r\n        for (var currLng = effectiveLeftTopLl.lng; currLng <= effectiveRightBottomLl.lng; currLng += this._HALF_DEGREE) {\r\n            for (var currLat = effectiveRightBottomLl.lat; currLat <= effectiveLeftTopLl.lat; currLat += this._HALF_DEGREE) {\r\n                var labelText = getGARSNumbers(currLng) + getGARSLetters(currLat);\r\n                var labelPosnXy = this.map.latLngToContainerPoint({\r\n                    lat: currLat + this._QUARTER_DEGREE,\r\n                    lng: currLng + this._QUARTER_DEGREE,\r\n                });\r\n                this.drawLabel(ctx, labelText, labelPosnXy);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This procedure will draw an individual GARS 30 minute label\r\n     * @param {CanvasRenderingContext2D} ctx - The context of the canvas it is being drawn on\r\n     * @param {string} labelText - The 30 minute GARS label\r\n     * @param {Point} labelPosnXy - The XY position of the GARS label\r\n     */\r\n    Graticule.prototype.drawLabel = function (ctx, labelText, labelPosnXy) {\r\n        var textWidth = ctx.measureText(labelText).width;\r\n        var textHeight = ctx.measureText(labelText).fontBoundingBoxAscent;\r\n        ctx.fillStyle = this._THIRTY_MINUTES_LINE_COLOR;\r\n        // Magic numbers centre the rectangle and text in the proper area\r\n        ctx.fillRect(labelPosnXy.x - textWidth / 2 - 1, labelPosnXy.y - textHeight + 4, textWidth + 3, textHeight + 2);\r\n        ctx.fillStyle = this._FONT_COLOUR;\r\n        ctx.fillText(labelText, labelPosnXy.x - textWidth / 2, labelPosnXy.y + 3);\r\n    };\r\n    /**\r\n     * This is a generic procedure which takes the properties of the graticule and then draws them\r\n     * @param {CanvasRenderingContext2D} ctx - The context of the canvas it is being drawn on\r\n     * @param {GraticuleProperties} graticuleProperties - The properties of the graticule being drawn\r\n     */\r\n    Graticule.prototype.drawGraticules = function (ctx, graticuleProperties) {\r\n        if (!this.canvas || !this.map) {\r\n            return;\r\n        }\r\n        if (this.map.getZoom() < graticuleProperties.minZoom) {\r\n            return;\r\n        }\r\n        ctx.lineWidth = graticuleProperties.lineWidth;\r\n        ctx.strokeStyle = graticuleProperties.lineColor;\r\n        ctx.fillStyle = graticuleProperties.lineColor;\r\n        var leftTopLl = this.map.containerPointToLatLng({\r\n            x: 0,\r\n            y: 0,\r\n        });\r\n        var rightBottomLl = this.map.containerPointToLatLng({\r\n            x: this.canvas.width,\r\n            y: this.canvas.height,\r\n        });\r\n        var baseStartingLatitude = Math.floor(rightBottomLl.lat / this._HALF_DEGREE) * this._HALF_DEGREE;\r\n        var baseStartingLongitude = Math.floor(leftTopLl.lng / this._HALF_DEGREE) * this._HALF_DEGREE;\r\n        var startingLatitude = graticuleProperties.interval === Interval.Fifteen\r\n            ? baseStartingLatitude + this._QUARTER_DEGREE\r\n            : baseStartingLatitude;\r\n        // Horizontal Lines\r\n        for (var i = startingLatitude; i <= leftTopLl.lat; i += graticuleProperties.increment) {\r\n            if (!(graticuleProperties.interval === Interval.Five && Math.abs(i % this._HALF_DEGREE) < 1e-6)) {\r\n                this.drawLatitudeLine(ctx, i, leftTopLl.lng, rightBottomLl.lng);\r\n            }\r\n        }\r\n        var startingLongitude = graticuleProperties.interval === Interval.Fifteen\r\n            ? baseStartingLongitude + this._QUARTER_DEGREE\r\n            : baseStartingLongitude;\r\n        // Vertical lines\r\n        for (var i = startingLongitude; i <= rightBottomLl.lng; i += graticuleProperties.increment) {\r\n            if (!(graticuleProperties.interval === Interval.Five && Math.abs(i % this._HALF_DEGREE) < 1e-6)) {\r\n                this.drawLongitudeLine(ctx, i, leftTopLl.lat, rightBottomLl.lat);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * This procedure draws 30 minute graticules\r\n     * @param {CanvasRenderingContext2D} ctx - The context of the canvas it is being drawn on\r\n     */\r\n    Graticule.prototype.drawThirtyMinuteGraticules = function (ctx) {\r\n        var lineProperties = {\r\n            interval: Interval.Thirty,\r\n            increment: this._HALF_DEGREE,\r\n            minZoom: this._THIRTY_MINUTES_MIN_ZOOM,\r\n            lineWidth: this._THIRTY_MINUTES_LINE_WIDTH,\r\n            lineColor: this._THIRTY_MINUTES_LINE_COLOR,\r\n        };\r\n        this.drawGraticules(ctx, lineProperties);\r\n    };\r\n    /**\r\n     * This procedure draws 15 minute graticules\r\n     * @param {CanvasRenderingContext2D} ctx - The context of the canvas it is being drawn on\r\n     */\r\n    Graticule.prototype.drawFifteenMinuteGraticules = function (ctx) {\r\n        var lineProperties = {\r\n            interval: Interval.Fifteen,\r\n            increment: this._HALF_DEGREE,\r\n            minZoom: this._FIFTEEN_MINUTES_MIN_ZOOM,\r\n            lineWidth: this._FIFTEEN_MINUTES_LINE_WIDTH,\r\n            lineColor: this._FIFTEEN_MINUTES_LINE_COLOR,\r\n        };\r\n        this.drawGraticules(ctx, lineProperties);\r\n    };\r\n    /**\r\n     * This procedure draws 5 minute graticules\r\n     * @param {CanvasRenderingContext2D} ctx - The context of the canvas it is being drawn on\r\n     */\r\n    Graticule.prototype.drawFiveMinuteGraticules = function (ctx) {\r\n        var lineProperties = {\r\n            interval: Interval.Five,\r\n            increment: this._ONE_TWELFTH_DEGREE,\r\n            minZoom: this._FIVE_MINUTES_MIN_ZOOM,\r\n            lineWidth: this._FIVE_MINUTES_LINE_WIDTH,\r\n            lineColor: this._FIVE_MINUTES_LINE_COLOR,\r\n        };\r\n        this.drawGraticules(ctx, lineProperties);\r\n    };\r\n    /**\r\n     * This procedure will draw a single Latitude line on the map\r\n     * @param {CanvasRenderingContext2D} ctx - The context of the canvas it is being drawn on\r\n     * @param {number} latitude - The latitude of the latitude line to be drawn\r\n     * @param {number} westLng - The West longitude boundary of the visible area\r\n     * @param {number} eastLng - The East longitude boundary of the visible area\r\n     */\r\n    Graticule.prototype.drawLatitudeLine = function (ctx, latitude, westLng, eastLng) {\r\n        var westEnd = this.map.latLngToContainerPoint({\r\n            lat: latitude,\r\n            lng: westLng,\r\n        });\r\n        var eastEnd = this.map.latLngToContainerPoint({\r\n            lat: latitude,\r\n            lng: eastLng,\r\n        });\r\n        ctx.beginPath();\r\n        ctx.moveTo(westEnd.x, westEnd.y);\r\n        ctx.lineTo(eastEnd.x, eastEnd.y);\r\n        ctx.stroke();\r\n    };\r\n    /**\r\n     * This procedure will draw a single Longitude line on the map\r\n     * @param {CanvasRenderingContext2D} ctx - The context of the canvas it is being drawn on\r\n     * @param {number} longitude - The longitude of the longitude line to be drawn\r\n     * @param {number} northLat - The North latitude boundary of the visible area\r\n     * @param {number} southLat - The South latitude boundary of the visible area\r\n     */\r\n    Graticule.prototype.drawLongitudeLine = function (ctx, longitude, northLat, southLat) {\r\n        var northEnd = this.map.latLngToContainerPoint({\r\n            lat: northLat,\r\n            lng: longitude,\r\n        });\r\n        var southEnd = this.map.latLngToContainerPoint({\r\n            lat: southLat,\r\n            lng: longitude,\r\n        });\r\n        ctx.beginPath();\r\n        ctx.moveTo(northEnd.x, northEnd.y);\r\n        ctx.lineTo(southEnd.x, southEnd.y);\r\n        ctx.stroke();\r\n    };\r\n    return Graticule;\r\n}());\r\nexport { GarsGraticule };\r\n//# sourceMappingURL=Graticule.js.map","import { LayerGroup, LayersControl, MapContainer, TileLayer } from 'react-leaflet';\nimport './App.css';\n\nimport { GarsGraticule } from 'react-leaflet-gars-graticule';\n\n// Assigning the same name to the overlay as it's named in the control box\n// makes it much easier to toggle it on and off when multiple overlays\n// are employed.\nconst garsGraticuleName = 'GARS';\n// Controls whether the overlay is displayed on map load\nconst overlayEnabled = true;\nfunction App() {\n  return (\n    <MapContainer\n      center={[45.4, -75.7]}\n      zoom={8}\n      minZoom={3}\n      maxZoom={16}\n      maxBounds={[\n        [-90, -180],\n        [90, 180],\n      ]}\n    >\n      <LayersControl position=\"topright\">\n        <LayersControl.BaseLayer checked name=\"ESRI Satellite\">\n          <TileLayer\n            url=\"https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            attribution='&copy; <a href=\"https://wiki.openstreetmap.org/wiki/Esri\"></a> contributors'\n          />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer name=\"ESRI Clarity\">\n          <TileLayer\n            url=\"https://clarity.maptiles.arcgis.com/arcgis/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            attribution='&copy; <a href=\"https://wiki.openstreetmap.org/wiki/Esri\"></a> contributors'\n          />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer name=\"OSM Topo\">\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer name=\"OSM Topo\">\n          <TileLayer url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\" attribution=\"OSM\" />\n        </LayersControl.BaseLayer>\n        <LayersControl.Overlay checked={overlayEnabled} name={garsGraticuleName}>\n          <LayerGroup>\n            <GarsGraticule checked={overlayEnabled} name={garsGraticuleName} />\n          </LayerGroup>\n        </LayersControl.Overlay>\n      </LayersControl>\n    </MapContainer>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}